{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ccf34cb0a3033308d6f2","webpack:///external \"THREE\"","webpack:///./src/ballSpinnerLoader.js","webpack:///./src/progressiveImgLoader.js","webpack:///./src/sphereControls.js","webpack:///external \"$\"","webpack:///./src/sphereViewer.js"],"names":["BallSpinnerLoader","config","groupRadius","circleCount","circleRadius","groupAngle","animationAmplitude","circles","mesh","initGroup","prototype","makeCircle","radius","circleSegments","segments","circleGeometry","circleMaterial","color","transparent","opacity","side","opacityStep","addToScene","scene","add","currOpacity","animationStep","currAngle","angleStep","Math","PI","i","oneCircle","pos","polar2cartesian","distance","radians","position","set","x","y","push","polar","round","cos","sin","animate","rotation","z","zStep","length","newOpacity","material","newRadius","geometry","ProgressiveImgLoader","self","texture","imageObj","Image","crossOrigin","onload","needsUpdate","loadingIx","images","dispatchEvent","type","imageIndex","window","setTimeout","src","image","proto","Object","create","load","dispose","SphereControls","camera","domElement","undefined","document","addEventListener","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentTouchStart","onDocumentTouchEnd","onDocumentTouchMove","initialTime","lubrication","_isUserInteracting","_dragStartPosition","lat","lon","_curr","phi","theta","time","_prev","time2","_target","_speed","_autoRotation","enabled","autoRotate","suspended","speed","max","min","autoRotateSpeed","autoRotateDirection","delay","autoRotateDelay","timeout","event","original","preventDefault","autoRotate_Stop","radToDeg","clientX","clientY","autoRotate_Start","fov","deltaY","updateProjectionMatrix","touches","stopPropagation","pageX","pageY","clearTimeout","update","degToRad","lookAt","SphereViewer","paramType","toString","call","Error","isDisposed","initViewport","initScene","sphere","forceCube","initSphere","initCube","logo","initLogo","logoDistance","hint","showHint","initControls","onResize","bind","render","nativeW","devicePixelRatio","screen","availWidth","scale","viewportMeta","originalViewPortMeta","attr","isMobile","container","createElement","className","closeButtonHtml","closeButton","innerHTML","appendChild","closeButton_onClick","getElementsByTagName","controls_onTap","ev","hideHint","body","renderer","setSize","scrollWidth","scrollHeight","fieldOfView","aspectRatio","near","far","imgUrl","cubeSize","materials","loadEqui","tiles","loadTiles","atlas","loadAtlas","showLoader","loadCounter","image_placeholder","map","key","img","console","log","hideLoader","canvases","el","canvas","tile2canvasIx","right","left","top","bottom","front","back","tileOrder","tileWidth","height","forEach","ix","width","context","getContext","drawImage","imgObj","srcWidth","srcHeight","inCanvas","inCtx","srcImg","getImageData","equi2recti","faceSize","imgOut","ImageData","tileIx2canvasIx","onWorkerMessage","faceIx","data","canvasIx","oneCanvas","putImageData","imgData","multiWorker","w","Worker","onmessage","postMessage","speherRadius","sphere_H_segments","sphere_V_segments","uvMapper","loadImages","logoUrl","texLoader","hintUrl","remove","controls","control","offsetWidth","offsetHeight","aspect","requestAnimationFrame","spinLoader","spinner","loader_onDone","removeEventListener","imgLoader","loaderEl","Viewer"],"mappings":"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","file":"sphereViewer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"), require(\"$\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\", \"$\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SphereViewer\"] = factory(require(\"THREE\"), require(\"$\"));\n\telse\n\t\troot[\"SphereViewer\"] = factory(root[\"THREE\"], root[\"$\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ccf34cb0a3033308d6f2","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"THREE\"\n// module id = 0\n// module chunks = 0","/**\r\n * BallSpinnerLoader.js <https://github.com/knee-cola/BallSpinnerLoader.js>\r\n * Released under the MIT license\r\n * @author Nikola Derežić / https://github.com/knee-cola\r\n *\r\n * This is a spinner/loader built for Three.js platform.\r\n * \r\n * It can be used to notify user that some resources are being loaded.\r\n * I made it to replace pure CSS spinner, which was displayed in the\r\n * overlay above the 3D animation, since it was slowing down WebGL\r\n *\r\n * How to use:\r\n * \r\n *    // defining spinner config\r\n *    var spinnerConfig = {\r\n *      groupRadius: 20, // outter radius of the spinner circle\r\n *      circleCount: 8, // number of spinner elements (circles)\r\n *      circleRadius: 5, // radius of each of the spinner elements (circles)\r\n *      // as they spin, circles are brought closer to the camera af their\r\n *      // opacity increases. Here we can define how close/far are\r\n *      // the elements pushed\r\n *      animationAmplitude: 10\r\n *    };\r\n *    \r\n *\r\n *    // creating a new spinner\r\n *    var spinLoader = new BallSpinLoader(spinnerConfig);\r\n *    \r\n *    // add spinner to the scene\r\n *    spinLoader.addToScene(scene);\r\n *\r\n *   // add it to the render funcion\r\n *   function render() {\r\n *\r\n *      requestAnimationFrame( render );\r\n *\r\n *     // make it spin\r\n *     spinLoader.animate();\r\n *\r\n *     renderer.render( scene, camera );\r\n *   }\r\n * \r\n */\r\nimport {\r\n    EventDispatcher as THREE_EventDispatcher,\r\n    CircleGeometry as THREE_CircleGeometry,\r\n    MeshBasicMaterial as THREE_MeshBasicMaterial,\r\n    DoubleSide as THREE_DoubleSide,\r\n    Object3D as THREE_Object3D,\r\n    Mesh as THREE_Mesh\r\n  } from 'three'\r\n\r\nvar BallSpinnerLoader = function(config) {\r\n  config = config  || {};\r\n\r\n  this.groupRadius = config.groupRadius || 10;\r\n  this.circleCount = config.circleCount || 8;\r\n  this.circleRadius = config.circleRadius || 1;\r\n  this.groupAngle = 0;\r\n\r\n  // circles depending on their opacity will\r\n  // have higer or lower opacity\r\n  // [amplitude] defines the amplitude\r\n  this.animationAmplitude = config.animationAmplitude || 10;\r\n  \r\n  this.circles = [];\r\n  this.mesh = this.initGroup();\r\n};\r\n\r\nBallSpinnerLoader.prototype = {\r\n  makeCircle: function(config) {\r\n    config = config || {};\r\n    var circleRadius = config.radius || 5,\r\n        circleSegments = config.segments || 16, //<-- Increase or decrease for more resolution I guess\r\n        circleGeometry = new THREE_CircleGeometry( circleRadius, circleSegments ),\r\n        circleMaterial = new THREE_MeshBasicMaterial({ color: 0xffffff, transparent:true, opacity: config.opacity, side: THREE_DoubleSide });\r\n\r\n    return({\r\n      mesh: new THREE_Mesh(circleGeometry, circleMaterial),\r\n      opacityStep: config.opacityStep || 0.01\r\n    });\r\n  },\r\n  addToScene:function(scene) {\r\n    scene.add(this.mesh);\r\n  },\r\n  initGroup: function() {\r\n    var mesh = new THREE_Object3D(),\r\n        // the opacity will be distributed symetrically\r\n        // with maximum on one side of the circle group\r\n        // and minimum at the opposite side\r\n        currOpacity = 0,\r\n        opacityStep = 1 / (this.circleCount/2+1),\r\n        // opacity will be animated - here we define how fast\r\n        animationStep = 0.02,\r\n        // circles are distributed evenly around the group edge\r\n        currAngle = 0,\r\n        angleStep = 2*Math.PI / this.circleCount;\r\n\r\n    for(var i=0;i<this.circleCount;i++) {\r\n      \r\n      currOpacity+=opacityStep;\r\n      \r\n      if(currOpacity>1) {\r\n      // IF the max opacity has been reached\r\n      // > go into oposit direction\r\n        currOpacity = 1-opacityStep;\r\n        opacityStep = -opacityStep;\r\n        // reverse the opacity animation direction,\r\n        // so that the second halve of the circles\r\n        // is on the fade-out direction\r\n        // ... the net result that the opacity minimum/maximum\r\n        // will rotate around the group\r\n        animationStep = -animationStep;\r\n      }\r\n      \r\n      var oneCircle = this.makeCircle({opacity:currOpacity, opacityStep: animationStep, radius: this.circleRadius});\r\n      \r\n      // oneCircle.rotation.x = Math.PI / 4; // rotiram krug tako da bude položen na ravninu\r\n      var pos = this.polar2cartesian({ distance: this.groupRadius, radians: currAngle});\r\n      oneCircle.mesh.position.set(pos.x, pos.y, currOpacity*this.animationAmplitude);\r\n      \r\n      currAngle+=angleStep;\r\n      \r\n      mesh.add(oneCircle.mesh);\r\n      this.circles.push(oneCircle);\r\n    }\r\n\r\n    return(mesh);\r\n  },\r\n  polar2cartesian: function(polar) {\r\n    return({\r\n      x: Math.round(polar.distance * Math.cos(polar.radians)*1000)/1000,\r\n      y: Math.round(polar.distance * Math.sin(polar.radians)*1000)/1000\r\n    });\r\n  },\r\n  animate: function() {\r\n    this.mesh.rotation.z+=0.02;\r\n    var circles = this.circles;\r\n    var zStep = 50 / (this.circleCount/2+1);\r\n\r\n    for(var i=0; i<circles.length; i++) {\r\n      var oneCircle = circles[i],\r\n          newOpacity = oneCircle.mesh.material.opacity + oneCircle.opacityStep,\r\n          newRadius = oneCircle.mesh.geometry.radius;\r\n\r\n      if(newOpacity>1) {\r\n        newOpacity = 1-oneCircle.opacityStep;\r\n        oneCircle.opacityStep=-oneCircle.opacityStep;\r\n      } else if(newOpacity<0) {\r\n        newOpacity = oneCircle.opacityStep;\r\n        oneCircle.opacityStep=-oneCircle.opacityStep;\r\n      }\r\n      \r\n      oneCircle.mesh.material.opacity = newOpacity;\r\n      oneCircle.mesh.position.z = newOpacity*this.animationAmplitude;\r\n    }\r\n  }\r\n};\r\n\r\nexport { BallSpinnerLoader }\n\n\n// WEBPACK FOOTER //\n// ./src/ballSpinnerLoader.js","/**\r\n * ProgressiveImgLoader.js <https://github.com/knee-cola/ProgressiveImgLoader.js>\r\n * Released under the MIT license\r\n * @author Nikola Derežić / https://github.com/knee-cola\r\n * \r\n * This is a simple progressive image loader for Three.js\r\n * \r\n * It enables the smaller image (short loading time) files to be pre-loaded first,\r\n * before the big texture image is fully loaded.\r\n * \r\n * The images are loaded in the order they are passed to the loader\r\n * \r\n * The loader dispatches the following events:\r\n *  - progress = dispatched evey time an additional image was loaded\r\n *  - done = dispatched after the last image was loaded\r\n *  \r\n * Here's a simple example:\r\n * \r\n *  // Defining an array of different sizes of images\r\n *  //\r\n *  // Hint: apart from degrading image resolution, smaller image files\r\n *  //       can also be produced by increasing the JPG compression\r\n *  var imageUrls = ['480p.jpg', '720p.jpg', '1080p.jpg', '2048p.jpg']:\r\n *  \r\n *  // creating a new loader\r\n *  var loader = new ProgressiveImageLoader(imageUrls);\r\n *  \r\n *  // registering event handlers\r\n *  loader.addEventListener('progress', function() { console.log('progress');  });\r\n *  loader.addEventListener('done', function() { console.log('done');  });\r\n *  \r\n *  // creating material - calling the [load] function\r\n *  var material = new THREE.MeshBasicMaterial({ map: loader.load() })\r\n *\r\n *  var mesh = new THREE.Mesh(geometry, material);\r\n *  \r\n *  scene.add(mesh);\r\n * \r\n */\r\n\r\nimport {\r\n    EventDispatcher as THREE_EventDispatcher,\r\n    Texture as THREE_Texture\r\n  } from 'three'\r\n\r\nvar ProgressiveImgLoader = function() {\r\n\r\n  var self = this;\r\n\r\n  self.texture = new THREE_Texture();\r\n\r\n  // create an image object\r\n  self.imageObj = new Image();\r\n  // this needs to be sit in order not to get \"Tainted canvases may not be loaded.\" WebGL error\r\n  self.imageObj.crossOrigin = \"anonymous\";\r\n\r\n  self.imageObj.onload = function() {\r\n\r\n    // [imageObj] is set to NULL when the object is disposed\r\n    if(self.imageObj) {\r\n\r\n      self.texture.needsUpdate = true;\r\n\r\n      if(self.loadingIx < self.images.length) {\r\n        self.dispatchEvent({type: 'progress', imageIndex: self.loadingIx});\r\n\r\n        // don't change the image [src] until the texture had a chance to update itself\r\n        window.setTimeout(function() {\r\n          self.imageObj.src = self.images[self.loadingIx++];\r\n        }, 1000);\r\n\r\n      } else {\r\n        self.dispatchEvent({type: 'done'});\r\n      }\r\n        \r\n    }\r\n\r\n  }; // imageObj.onload = function() {...}\r\n  \r\n  self.texture.image = self.imageObj;\r\n\r\n};\r\n\r\nvar proto = ProgressiveImgLoader.prototype = Object.create( THREE_EventDispatcher.prototype );\r\n\r\nproto.load = function(images) {\r\n\r\n  var self = this;\r\n\r\n  self.images = images;\r\n  self.loadingIx = 0;\r\n\r\n  // the loading process will begin after we set the [src] property\r\n  self.imageObj.src = self.images[self.loadingIx++];\r\n\r\n  return(self.texture);\r\n\r\n}; // proto.load = function(images) {...}\r\n\r\nproto.dispose = function() {\r\n  // stop loading current image\r\n  if(this.imageObj) {\r\n    this.imageObj.src = '';\r\n  }\r\n  this.imageObj = null;\r\n};\r\n\r\nexport {ProgressiveImgLoader}\n\n\n// WEBPACK FOOTER //\n// ./src/progressiveImgLoader.js","/**\r\n * SphereControls.js <https://github.com/knee-cola/SphereControls.js>\r\n * Released under the MIT license\r\n * @author Nikola Derežić / https://github.com/knee-cola\r\n * \r\n * This class controls the camera positioned in the middle of a sphere. It\r\n * allows the user to look around. It supports desktop (click events) and mobile\r\n * browser (touch events).\r\n * \r\n * How to use:\r\n * \r\n *  // defining te config for the controls\r\n * \tvar controlConfig = {\r\n * \t\tautoRotate: true, // the camera should rotate automatially\r\n * \t\tautoRotateSpeed: 2, // the speed of automatic rotation\r\n * \t\tautoRotateDirection: -1, // the direction (1=left / -1=right)\r\n * \t\tautoRotateDelay: 5000 // for how long should automatic rotation be paused after a user interaction\r\n * \t};\r\n * \r\n * \tvar _ctrl = new SphereControls(_camera, _renderer.domElement, controlConfig);\r\n * \t\r\n * \t// attaching the event handler\r\n * \t_ctrl.addEventListener('tap', function() { console.log('user tapped the screen'); });\r\n * \r\n *   function render() {\r\n *\r\n *      requestAnimationFrame( render );\r\n *\r\n *     // updating controls from the [render] function\r\n *     _ctrl.update();\r\n *\r\n *     _renderer.render( _scene, _camera );\r\n *   }\r\n *   \r\n */\r\nimport {\r\n    EventDispatcher as THREE_EventDispatcher,\r\n    Vector3 as THREE_Vector3,\r\n    Math as THREE_Math\r\n  } from 'three'\r\n\r\nvar SphereControls = function (camera, domElement, config) {\r\n\r\n\tvar self = this;\r\n\r\n\tconfig = config || {};\r\n\r\n\tdomElement = ( domElement !== undefined ) ? domElement : document;\r\n\tdomElement.addEventListener( 'mousedown', onDocumentMouseDown, false );\r\n\tdomElement.addEventListener( 'mousemove', onDocumentMouseMove, false );\r\n\tdomElement.addEventListener( 'mouseup', onDocumentMouseUp, false );\r\n\tdomElement.addEventListener( 'wheel', onDocumentMouseWheel, false );\r\n\tdomElement.addEventListener( 'touchstart', onDocumentTouchStart, false );\r\n\tdomElement.addEventListener( 'touchend', onDocumentTouchEnd, false );\r\n\tdomElement.addEventListener( 'touchmove', onDocumentTouchMove, false );\r\n\r\n\t//  [initialTime] determins the how much the speed is initially decreased,\r\n\t//  after the user releases the mouse button - the higher the value,\r\n\t//  the larger initial drop in speed - don't go below 2\r\n\tvar initialTime = 5,\r\n\t\t// [lubrication] determins how fast the speed decreases after the user\r\n\t\t// releases the mouse button. Larger value, the slower the speed drops\r\n\t\tlubrication = 60;\r\n\r\n\tvar _isUserInteracting = false,\r\n\t\t_dragStartPosition ={\r\n\t\t\tx: null,\r\n\t\t\ty: null,\r\n\t\t\tlat: null,\r\n\t\t\tlon: null\r\n\t\t},\r\n\t\t_curr = {\r\n\t\t\tposition: {\r\n\t\t\t\tlon: 90,\r\n\t\t\t\tlat: 0,\r\n\t\t\t\tphi: Math.PI/2,\r\n\t\t\t\ttheta: 0\r\n\t\t\t},\r\n\t\t\ttime: initialTime\r\n\t\t},\r\n\t\t_prev = {\r\n\t\t\tposition: {\r\n\t\t\t\tphi: _curr.position.phi,\r\n\t\t\t\ttheta: _curr.position.theta\r\n\t\t\t},\r\n\t\t\ttime2: 1\r\n\t\t},\r\n\t\t_target = new THREE_Vector3(),\r\n\t\t_speed = {\r\n\t\t\tphi: 0,\r\n\t\t\ttheta: 0\r\n\t\t},\r\n\t\t_autoRotation = {\r\n\t\t\tenabled: !!config.autoRotate,\r\n\t\t\tsuspended: !config.autoRotate,\r\n\t\t\tspeed: Math.max(0, Math.min(10, config.autoRotateSpeed || 1)) / 1000 * (config.autoRotateDirection===-1 ? -1 : 1),\r\n\t\t\tdelay: Math.max(config.autoRotateDelay || 5000, 1000), // after how much time shoud the automatic rotation start\r\n\t\t\ttimeout: null\r\n\r\n\t\t}\r\n\r\n\tfunction onDocumentMouseDown( event ) {\r\n\t\t\r\n\t\t// attache the original event as payload\r\n\t\tself.dispatchEvent({type:'tap', original:event });\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\t_isUserInteracting = true;\r\n\t\tautoRotate_Stop();\r\n\r\n\t\t_curr.position.lon = THREE_Math.radToDeg( _curr.position.theta );\r\n\t\t_curr.position.lat = 90 - THREE_Math.radToDeg( _curr.position.phi );\r\n\r\n\t\t_dragStartPosition.x = event.clientX;\r\n\t\t_dragStartPosition.y = event.clientY;\r\n\t\t_dragStartPosition.lon = _curr.position.lon;\r\n\t\t_dragStartPosition.lat = _curr.position.lat;\r\n\t}\r\n\tfunction onDocumentMouseMove( event ) {\r\n\t\tif ( _isUserInteracting === true ) {\r\n\t\t\t_curr.position.lon = ( _dragStartPosition.x - event.clientX ) * 0.1 + _dragStartPosition.lon;\r\n\t\t\t_curr.position.lat = ( event.clientY - _dragStartPosition.y ) * 0.1 + _dragStartPosition.lat;\r\n\t\t}\r\n\t\tself.dispatchEvent({type:'mouseMove', original:event });\r\n\t}\r\n\tfunction onDocumentMouseUp( event ) {\r\n\t\t_isUserInteracting = false;\r\n\t\tevent.preventDefault()\r\n\t\tautoRotate_Start();\r\n\t}\r\n\tfunction onDocumentMouseWheel( event ) {\r\n\t\tcamera.fov += event.deltaY * 0.05;\r\n\t\tcamera.updateProjectionMatrix();\r\n\t}\r\n\tfunction onDocumentTouchStart( event ) {\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\t_isUserInteracting = true;\r\n\t\t\tautoRotate_Stop();\r\n\r\n\t\t\t// attache the original event as payload\r\n\t\t\tself.dispatchEvent({type:'tap', original:event });\r\n\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\t\t\t_dragStartPosition.x = event.touches[ 0 ].pageX;\r\n\t\t\t_dragStartPosition.y = event.touches[ 0 ].pageY;\r\n\r\n\t\t\t_curr.position.lon = THREE_Math.radToDeg( _curr.position.theta );\r\n\t\t\t_curr.position.lat = 90 - THREE_Math.radToDeg( _curr.position.phi );\r\n\r\n\t\t\t_dragStartPosition.lon = _curr.position.lon;\r\n\t\t\t_dragStartPosition.lat = _curr.position.lat;\r\n\t\t}\r\n\t}\r\n\tfunction onDocumentTouchMove( event ) {\r\n\t\tif ( event.touches.length == 1 ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tevent.stopPropagation();\r\n\r\n\t\t\t_curr.position.lon = ( _dragStartPosition.x - event.touches[0].pageX ) * 0.1 + _dragStartPosition.lon;\r\n\t\t\t_curr.position.lat = ( event.touches[0].pageY - _dragStartPosition.y ) * 0.1 + _dragStartPosition.lat;\r\n\t\t}\r\n\t}\r\n\tfunction onDocumentTouchEnd( event ) {\r\n\t\t_isUserInteracting = false;\r\n\t\tautoRotate_Start();\r\n\t}\r\n\r\n\tfunction autoRotate_Stop() {\r\n\t\t_autoRotation.suspended = true;\r\n\r\n\t\tif(_autoRotation.timeout) {\r\n\t\t\twindow.clearTimeout(_autoRotation.timeout);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction autoRotate_Start() {\r\n\t\tif(_autoRotation.enabled) {\r\n\t\t\t_autoRotation.timeout = window.setTimeout(function() {\r\n\t\t\t\t_autoRotation.timeout = null;\r\n\t\t\t\t_autoRotation.suspended = false;\r\n\t\t\t}, _autoRotation.delay);\r\n\t\t}\r\n\t}\r\n\r\n\tthis.update = function() {\r\n\r\n\t\tif(_isUserInteracting) {\r\n\r\n\t\t\t_curr.position.lat = Math.max( - 85, Math.min( 85, _curr.position.lat ) );\r\n\r\n\t\t\t_curr.position.phi = THREE_Math.degToRad( 90 - _curr.position.lat );\r\n\t\t\t_curr.position.theta = THREE_Math.degToRad( _curr.position.lon );\r\n\r\n\t\t\t// calculate the drag speed\r\n\t\t\t_speed = {\r\n\t\t\t\tphi: _curr.position.phi - _prev.position.phi,\r\n\t\t\t\ttheta: _curr.position.theta - _prev.position.theta\r\n\t\t\t};\r\n\r\n\t\t\t_curr.time = initialTime; // reset the time to initial time\r\n\r\n\t\t\t_prev.time2 = 1;\r\n\r\n\t\t} else {\r\n\r\n\r\n\t\t\tvar time2 = _curr.time*_curr.time/lubrication;\r\n\t\t\t_curr.time++;\r\n\r\n\t\t\t// calculating the new value of speed\r\n\t\t\t_speed.phi = _speed.phi*_prev.time2 / time2;\r\n\t\t\t_speed.theta = _speed.theta*_prev.time2 / time2;\r\n\r\n\t\t\t_prev.time2 = time2;\r\n\r\n\t\t\tif(!_autoRotation.suspended) {\r\n\t\t\t\t_speed.theta = _autoRotation.speed < 0 ? Math.min(_speed.theta, _autoRotation.speed) : Math.max(_speed.theta, _autoRotation.speed);\r\n\t\t\t}\r\n\r\n\t\t\t// adjusting the camera angle\r\n\t\t\t_curr.position.phi += _speed.phi;\r\n\t\t\t_curr.position.theta += _speed.theta;\r\n\r\n\t\t\tif(_curr.position.phi>Math.PI) {\r\n\t\t\t// IF the camera hits the sphere bottom\r\n\t\t\t// > make it bouce back\r\n\t\t\t\t_curr.position.phi=Math.PI;\r\n\t\t\t\t_speed.phi = _speed.phi*-1;\r\n\t\t\t} else if(_curr.position.phi<0) {\r\n\t\t\t// IF the camera hits the sphere top\r\n\t\t\t// > make it bouce back\r\n\t\t\t\t_curr.position.phi=0;\r\n\t\t\t\t_speed.phi = _speed.phi*-1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_prev.position.phi = _curr.position.phi;\r\n\t\t_prev.position.theta = _curr.position.theta;\r\n\r\n\t\t_target.x = 500 * Math.sin( _curr.position.phi ) * Math.cos( _curr.position.theta );\r\n\t\t_target.y = 500 * Math.cos( _curr.position.phi );\r\n\t\t_target.z = 500 * Math.sin( _curr.position.phi ) * Math.sin( _curr.position.theta );\r\n\r\n\t\tcamera.lookAt( _target );\r\n\t}\r\n\r\n}; // SphereControls = function (camera) {...}\r\n\r\nSphereControls.prototype = Object.create( THREE_EventDispatcher.prototype );\r\n\r\nexport {SphereControls}\n\n\n// WEBPACK FOOTER //\n// ./src/sphereControls.js","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"$\"\n// module id = 4\n// module chunks = 0","/**\r\n * SphereViewer.js <https://github.com/knee-cola/SphereViewer.js>\r\n * Released under the MIT license\r\n * @author Nikola Derežić / https://github.com/knee-cola\r\n */\r\nimport {\r\n    EventDispatcher as THREE_EventDispatcher,\r\n    WebGLRenderer as THREE_WebGLRenderer,\r\n    Scene as THREE_Scene,\r\n    PerspectiveCamera as THREE_PerspectiveCamera,\r\n    SphereGeometry as THREE_SphereGeometry,\r\n    Mesh as THREE_Mesh,\r\n    MeshBasicMaterial as THREE_MeshBasicMaterial,\r\n    TextureLoader as THREE_TextureLoader,\r\n    Texture as THREE_Texture,\r\n    PlaneGeometry as THREE_PlaneGeometry,\r\n    BoxGeometry as THREE_BoxGeometry,\r\n    DoubleSide as THREE_DoubleSide,\r\n    FrontSide as THREE_FrontSide,\r\n    BackSide as THREE_BackSide,\r\n    Matrix4 as THREE_Matrix4\r\n  } from 'three'\r\n\r\nimport $ from 'jquery'\r\n\r\nimport {SphereControls} from './sphereControls'\r\nimport {ProgressiveImgLoader} from './progressiveImgLoader'\r\nimport {BallSpinnerLoader} from './ballSpinnerLoader'\r\n\r\nfunction SphereViewer(config) {\r\n\tvar paramType = Object.prototype.toString.call(config);\r\n\t\r\n\tif(config === void 0 || paramType === '[object String]' || paramType === '[object Array]') {\r\n\t\tthrow new Error('the first (and only) parameter of SphereViewer must be a config object');\r\n\t}\r\n\t\r\n\tthis.isDisposed = false;\r\n\tthis.config = config = config || {};\r\n\r\n\tthis.initViewport();\r\n\tthis.initScene();\r\n\t\r\n\tif(this.config.sphere && !this.config.forceCube) {\r\n\t// IF image URLs are provided via a \"sphere\" param\r\n\t// AND cube geometry is not forced\r\n\t// > apply texture onto a sphere\r\n\t\tthis.initSphere();\r\n\t} else {\r\n\t// ELSE apply texture onto a cube/box \r\n\t\tthis.initCube();\r\n\t}\r\n\t\r\n\tif(this.config.logo) {\r\n\t\tthis.initLogo(this.config.logo, this.config.logoDistance===void 0 ? -15 : this.config.logoDistance);\r\n\t}\r\n\r\n\tif(this.config.hint) {\r\n\t\tthis.showHint(this.config.hint);\r\n\t}\r\n\r\n\tthis.initControls();\r\n\r\n\t// attaching a bound version of the method to the instance\r\n\t// > we'll need it to remove event listener\r\n\tthis.onResize = this.onResize.bind(this);\r\n\r\n\twindow.addEventListener('resize', this.onResize, false);\r\n\twindow.setTimeout(this.onResize, 1);\r\n\r\n\tthis.render();\r\n};\r\n\r\nvar proto = SphereViewer.prototype = Object.create( THREE_EventDispatcher.prototype );\r\n\r\nproto.initViewport = function() {\r\n\r\n    var nativeW = window.devicePixelRatio * window.screen.availWidth,\r\n        scale = 1/window.devicePixelRatio,\r\n        viewportMeta = $('head meta[name=\"viewport\"]');\r\n\r\n    this.originalViewPortMeta = viewportMeta.attr('content');\r\n    viewportMeta.attr('content', 'initial-scale='+scale+', maximum-scale='+scale+', user-scalable=0');\r\n\r\n    // na mobitelima pixel ration NIJE 1\r\n    var isMobile = window.devicePixelRatio!==1;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'sphere-container ' + (isMobile ? 'isMobile' : 'isDesktop');\r\n\r\n    if(this.config.closeButtonHtml) {\r\n      this.closeButton = document.createElement('i');\r\n      this.closeButton.innerHTML = this.config.closeButtonHtml;\r\n      this.container.appendChild(this.closeButton);\r\n      // attaching a bound version of the method to the instance\r\n      // > we'll need it to remove event listener\r\n      this.closeButton_onClick = this.closeButton_onClick.bind(this);\r\n      this.closeButton.addEventListener('click', this.closeButton_onClick);\r\n    }\r\n\r\n    document.getElementsByTagName('body')[0].appendChild(this.container);\r\n\r\n  }; // proto.initViewport = function() {...}\r\n\r\nproto.closeButton_onClick = function() {\r\n  this.dispose();\r\n  this.dispatchEvent({type:'closed'});\r\n};\r\nproto.controls_onTap = function(ev) {\r\n  // on first tap - hide the hint\r\n  this.hideHint();\r\n};\r\n\r\nproto.initScene = function() {\r\n\r\n  var body = document.getElementsByTagName('body')[0];\r\n\r\n  this.renderer = new THREE_WebGLRenderer();\r\n\r\n  this.renderer.setSize(body.scrollWidth, body.scrollHeight);\r\n  this.container.appendChild(this.renderer.domElement);\r\n\r\n  this.scene = new THREE_Scene();\r\n\r\n  var fieldOfView = 90,\r\n      aspectRatio = 1,\r\n      near = 1,\r\n\r\n      far = 1000;\r\n\r\n  this.camera = new THREE_PerspectiveCamera(fieldOfView, aspectRatio, near, far);\r\n  this.scene.add(this.camera);\r\n}; // proto.initScene = function() {...}\r\n\r\nproto.initCube = function(imgUrl) {\r\n\t\r\n\tvar cubeSize = 100,\r\n\t\tmaterials;\r\n\t\r\n\tif(this.config.sphere) {\r\n\t// IF a sphereicaql image is to be used\r\n\t// > convert it from spherical projection (equirectangulat)\r\n\t//   to cubical projection (rectilinear)\r\n\t\tmaterials = this.loadEqui();\r\n\t} else if(this.config.tiles) {\r\n\t// ELSE IF the texture is proveded as separate tiles\r\n\t// > load each tile separatley\r\n\t\tmaterials = this.loadTiles();\r\n\t} else if(this.config.atlas) {\r\n\t// ELSE IF the texture is provided as a single Atlas image file\r\n\t// containing all the tiles\r\n\t// > load the atlas file and split it into tiles\r\n\t\tmaterials = this.loadAtlas();\r\n\t}\r\n\r\n\tthis.mesh = new THREE_Mesh( new THREE_BoxGeometry( cubeSize, cubeSize, cubeSize ), materials );\r\n\tthis.mesh.scale.x = -1; // flipping sphere inside-out - not the texture is rendered on the inner side\r\n\tthis.scene.add(this.mesh);\r\n\t\r\n\tthis.showLoader();\r\n\r\n}; // proto.initCube = function(imgUrl) {...}\r\n\r\nproto.loadTiles = function() {\r\n\r\n\tvar self = this;\r\n\tvar loadCounter=0;\r\n\tvar tiles = this.config.tiles;\r\n\tvar image_placeholder = document.createElement( 'canvas' );\r\n\r\n\t// the order of faces in the following array is IMPORTANT\r\n\tvar materials = [\r\n\t\t'right',\r\n\t\t'left',\r\n\t\t'top',\r\n\t\t'bottom',\r\n\t\t'back',\r\n\t\t'front',\r\n\t].map(function(key) {\r\n\t\tvar img = new Image(),\r\n\t\t\ttexture = new THREE_Texture(image_placeholder);\r\n\t\t\r\n\t\timg.onload = function() {\r\n\t\t\tconsole.log(tiles[key]);\r\n\t\t\ttexture.image = img;\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\t\t\r\n\t\t\tif(++loadCounter===6) {\r\n\t\t\t\tself.hideLoader();\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\timg.src = tiles[key];\r\n\t\t\r\n\t\treturn(new THREE_MeshBasicMaterial({\r\n\t\t\tmap: texture\r\n\t\t}));\r\n\t});\r\n\t\r\n\treturn(materials);\r\n}; // proto.loadTiles = function() {...}\r\n\r\nproto.loadAtlas = function(imgUrl, materials, canvases) {\r\n\r\n\tvar self = this;\r\n\tvar imageObj=new Image();\r\n\r\n\tvar canvases = [0,1,2,3,4,5].map(function(el) {\r\n\t\treturn(document.createElement(\"canvas\"));\r\n\t});\r\n\r\n\tvar materials = canvases.map(function(canvas) {\r\n\t\treturn(new THREE_MeshBasicMaterial({\r\n\t\t\tmap: new THREE_Texture(canvas),\r\n\t\t}));\r\n\t});\r\n\t\r\n\tvar tile2canvasIx = {\r\n\t\tright:0,\r\n\t\tleft:1,\r\n\t\ttop:2,\r\n\t\tbottom:3,\r\n\t\tfront:4,\r\n\t\tback:5\r\n\t};\r\n\t\r\n\t// if the property is not set, then set the default order\r\n\tvar tileOrder = this.config.tileOrder || ['right','left','top','bottom','front','back'];\r\n\r\n\t// this needs to be set in order not to get \"Tainted canvases may not be loaded.\" WebGL error\r\n\timageObj.crossOrigin = \"anonymous\";\r\n\t\r\n\timageObj.onload = function() {\r\n\t\tvar tileWidth = imageObj.height;\r\n\r\n\t\ttileOrder.forEach(function(key) {\r\n\t\t\tvar ix = tile2canvasIx[key];\r\n\t\t\t\r\n\t\t\tvar canvas = canvases[ix];\r\n\t\t\tcanvas.height = tileWidth;\r\n\t\t\tcanvas.width = tileWidth;\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( imageObj, tileWidth * ix, 0, tileWidth, tileWidth, 0, 0, tileWidth, tileWidth );\r\n\t\t\r\n\t\t\tmaterials[ix].map.needsUpdate = true;\r\n\t\t\r\n\t\t});\r\n\t\t\r\n\t\tself.hideLoader();\r\n\t}; // imgObj.onload = function() {...}\r\n\t\r\n\timageObj.src = this.config.atlas;\r\n\t\r\n\treturn(materials);\r\n\r\n}; // proto.loadAtlas = function() {...}\r\n\r\nproto.loadEqui = function() {\r\n\r\n\tvar self = this;\r\n\tvar imgObj=new Image();\r\n\r\n\tvar canvases = [0,1,2,3,4,5].map(function(el) {\r\n\t\treturn(document.createElement(\"canvas\"));\r\n\t});\r\n\r\n\tvar materials = canvases.map(function(canvas) {\r\n\t\treturn(new THREE_MeshBasicMaterial({\r\n\t\t\tmap: new THREE_Texture(canvas),\r\n\t\t}));\r\n\t});\r\n\r\n\t// this needs to be sit in order not to get \"Tainted canvases may not be loaded.\" WebGL error\r\n\timgObj.crossOrigin = \"anonymous\";\r\n\t\r\n\timgObj.onload = function() {\r\n\t\t\r\n\t\tvar srcWidth = imgObj.width,\r\n\t\t\tsrcHeight = imgObj.height;\r\n\t\t\t\r\n\t\t// (3) when the image is loaded, start the conversion\r\n\t\tvar inCanvas = document.createElement('canvas');\r\n\t\tinCanvas.width = srcWidth;\r\n\t\tinCanvas.height = srcHeight;\r\n\r\n\t\tvar inCtx=inCanvas.getContext(\"2d\");\r\n\t\tinCtx.drawImage(imgObj,0,0);\r\n\r\n\t\tvar srcImg = inCtx.getImageData(0,0,srcWidth,srcHeight);\r\n\t\t\r\n\t\tself.equi2recti(srcImg, materials, canvases)\r\n\r\n\t}; // imgObj.onload = function() {...}\r\n\r\n\t// (2) start loading the image\r\n\timgObj.src = this.config.sphere;\r\n\r\n\treturn(materials);\r\n\t\r\n}; // proto.loadEqui = function() {...}\r\n\r\nproto.equi2recti = function(srcImg, materials, canvases) {\r\n\r\n\tvar self = this,\r\n\t\tfaceSize=srcImg.width/4;\r\n\r\n\tvar imgOut = new ImageData(faceSize, faceSize); \r\n\r\n\tvar tileIx2canvasIx = {\r\n\t\t0:5, // back\r\n\t\t1:1, // left\r\n\t\t2:4, // front\r\n\t\t3:0, // right\r\n\t\t4:2, // top\r\n\t\t5:3 // bottom\r\n\t};\r\n\t\r\n\tvar loadCounter = 0;\r\n\r\n\tvar onWorkerMessage = function(event) {\r\n\t// (4) as each image is converted apply it to canvas used as texture\r\n\t\t\r\n\t\tvar faceIx = event.data.faceIx,\r\n\t\t\tcanvasIx = tileIx2canvasIx[faceIx],\r\n\t\t\toneCanvas = canvases[canvasIx];\r\n\t\t\t\r\n\t\toneCanvas.width = faceSize;\r\n\t\toneCanvas.height = faceSize;\r\n\t\t\r\n\t\toneCanvas.getContext(\"2d\").putImageData(event.data.imgData,0,0);\r\n\t\t\r\n\t\tmaterials[canvasIx].map.needsUpdate = true;\r\n\r\n\t\tif(++loadCounter===6) {\r\n\t\t\tself.hideLoader();\r\n\t\t}\r\n\t};\r\n\r\n\tif(self.config.multiWorker) {\r\n\r\n\t\tfor(var i=0;i<6;i++) {\r\n\t\t\tvar w = new Worker(\"../src/equi2recti-worker.js\");\r\n\t\t\tw.onmessage = onWorkerMessage;\r\n\r\n\t\t\t// begin converting the images\r\n\t\t\tw.postMessage({\r\n\t\t\t\tsrcImg: srcImg,\r\n\t\t\t\timgOut: imgOut,\r\n\t\t\t\tfaceIx:i\r\n\t\t\t});\r\n\t\t}\r\n\t} else {\r\n\t\tvar w = new Worker(\"../src/equi2recti-worker.js\");\r\n\t\tw.onmessage = onWorkerMessage;\r\n\r\n\t\t// begin converting the images\r\n\t\tw.postMessage({\r\n\t\t\tsrcImg: srcImg,\r\n\t\t\timgOut: imgOut\r\n\t\t});\r\n\t}\r\n} // proto.equi2recti = function(srcImg, materials, canvases) {...}\r\n\r\nproto.initSphere = function() {\r\n\r\n  var speherRadius = 100,\r\n      sphere_H_segments = 64,\r\n      sphere_V_segments = 64;\r\n\r\n\r\n  var geometry = new THREE_SphereGeometry(speherRadius, sphere_H_segments, sphere_V_segments);\r\n\r\n  // check if a special UV mapping function should be used\r\n  if(this.config.uvMapper) {\r\n    this.config.uvMapper(geometry);\r\n  }\r\n\r\n  this.mesh = new THREE_Mesh(\r\n      geometry,\r\n      new THREE_MeshBasicMaterial({\r\n        map: this.loadImages(this.config.sphere),\r\n        side: THREE_FrontSide // displaying the texture on the outer side of the sphere\r\n      })\r\n  );\r\n\r\n  this.mesh.scale.x = -1; // flipping sphere inside-out - not the texture is rendered on the inner side\r\n  this.scene.add(this.mesh);\r\n\r\n}; // proto.initSphere = function(imageUrls) {...}\r\n\r\nproto.initLogo = function(logoUrl, logoDistance) {\r\n\r\n  var texLoader = new THREE_TextureLoader(),\r\n    self = this;\r\n\r\n  texLoader.crossOrigin = '';\r\n\r\n  texLoader.load(logoUrl, function(texture) {\r\n    self.logo = new THREE_Mesh(\r\n        new THREE_PlaneGeometry(10,10),\r\n        new THREE_MeshBasicMaterial({\r\n          map: texture,\r\n          side: THREE_FrontSide,\r\n          transparent: true,\r\n          opacity: 1\r\n        })\r\n    );\r\n\r\n    self.logo.position.set(0,logoDistance,0);\r\n    self.logo.rotation.x = -Math.PI/2;\r\n\r\n    self.scene.add(self.logo);\r\n  });\r\n\r\n}; // proto.initLogo = function(imageUrls) {...}\r\n\r\n\r\n/*---------------------------------------------------------------------*//**\r\n * Method displays an icon with instructions on how to use the viewer\r\n *\r\n * @param      {string}  hintUrl  URL of the image containing instructions\r\n */\r\nproto.showHint = function(hintUrl) {\r\n\r\n  var texLoader = new THREE_TextureLoader(),\r\n    self = this;\r\n\r\n  texLoader.crossOrigin = '';\r\n\r\n  texLoader.load(hintUrl, function(texture) {\r\n    self.hint = new THREE_Mesh(\r\n          new THREE_PlaneGeometry(10,10),\r\n          new THREE_MeshBasicMaterial({\r\n            map: texture,\r\n            side: THREE_FrontSide,\r\n            transparent: true,\r\n            opacity: 1\r\n          })\r\n      );\r\n\r\n    self.hint.position.set(0,0,-30);\r\n    // self.hint.rotation.x = -Math.PI/4;\r\n\r\n    self.camera.add(self.hint);\r\n  });\r\n}; // proto.showHint = function(imageUrls) {...}\r\n\r\n/*---------------------------------------------------------------------*//**\r\n * Method hides the hint\r\n */\r\nproto.hideHint = function() {\r\n  if(this.hint) {\r\n    this.camera.remove(this.hint);\r\n    this.hint = null;\r\n  }\r\n}\r\n\r\nproto.initControls = function() {\r\n  this.controls = new SphereControls(this.camera, this.renderer.domElement, this.config.control);\r\n  this.controls_onTap = this.controls_onTap.bind(this);\r\n  this.controls.addEventListener('tap', this.controls_onTap);\r\n}; // proto.initControls = function() {...}\r\n\r\nproto.onResize = function(ev) {\r\n  var width = this.container.offsetWidth;\r\n  var height = this.container.offsetHeight;\r\n\r\n  if(this.camera) {\r\n    this.camera.aspect = width / height;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n  this.renderer.setSize(width, height);\r\n}; // proto.onResize = function(ev) {...}\r\n\r\nproto.render = function() {\r\n\r\n  if(this.isDisposed) {\r\n    return;\r\n  }\r\n\r\n  requestAnimationFrame(this.render.bind(this));\r\n\r\n  this.dispatchEvent({type:'preRender', original:event });\r\n\r\n  if(this.controls) {\r\n    this.controls.update();\r\n  }\r\n\r\n  if(this.spinLoader) {\r\n    this.spinLoader.animate();\r\n  }\r\n\r\n  this.renderer.render(this.scene, this.camera);\r\n}; // proto.render = function() {...}\r\n\r\nproto.showLoader = function() {\r\n  this.spinLoader = new BallSpinnerLoader(this.config.spinner);\r\n  this.camera.add(this.spinLoader.mesh);\r\n  this.spinLoader.mesh.position.set(0,0,-50);\r\n  \r\n}; // proto.showLoader = function() {...}\r\n\r\nproto.hideLoader = function() {\r\n  if(this.spinLoader) {\r\n    this.camera.remove(this.spinLoader.mesh);\r\n    this.spinLoader = null;\r\n  }\r\n}; // proto.hideLoader = function() { ... }\r\n\r\nproto.loader_onDone = function() {\r\n\tconsole.log(\"loader_onDone\");\r\n  this.loader_onDone = null; // loader mi više nije potreban\r\n  this.hideLoader();\r\n};\r\n\r\nproto.dispose = function() {\r\n\r\n  window.removeEventListener('resize', this.onResize);\r\n\r\n  if(this.closeButton) {\r\n    this.closeButton.removeEventListener('click', this.closeButton_onClick);\r\n  }\r\n\r\n  this.controls.removeEventListener('tap', this.controls_onTap);\r\n\r\n  if(this.imgLoader) {\r\n\tthis.imgLoader.dispose();\r\n  }\r\n\r\n  this.isDisposed = true;\r\n  this.container.remove();\r\n\r\n  // restoring original viewport meta\r\n  $('head meta[name=\"viewport\"]').attr('content', this.originalViewPortMeta);\r\n\r\n  this.loaderEl = this.imgLoader = this.closeButton = this.container = this.renderer = this.container = this.camera = this.scene = this.sphere = this.controls = null;\r\n\r\n}; // proto.dispose = function() {...}\r\n\r\n\r\n\r\n/*-------------------------------------------------------------------------*//**\r\n * Fetches the images from server and assignes them to a texture\r\n *\r\n * @param      {Array}    images  array containg image URLs\r\n * @return     {Texture}  Three.js texture on which the images will be painted\r\n */\r\nproto.loadImages = function(images) {\r\n\r\n\tif(!this.imgLoader) {\r\n\t\tthis.imgLoader = new ProgressiveImgLoader();\r\n\r\n\t\tthis.loader_onDone = this.loader_onDone.bind(this);\r\n\t\tthis.imgLoader.addEventListener('done', this.loader_onDone);\r\n\t}\r\n\r\n\tthis.showLoader();\r\n\r\n\treturn(this.imgLoader.load(images));\r\n\r\n}; // proto.loadImages = function(images) {...}\r\n\r\nexport { SphereViewer as Viewer }\n\n\n// WEBPACK FOOTER //\n// ./src/sphereViewer.js"],"sourceRoot":""}